name: Layers

on:
  pull_request:
    branches:
      - master
      - development
      - dev/workflow
  push:
    branches:
      - master
      - development
      - dev/workflow

jobs:
  CheckLayerUpdated:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.updates.outputs.LAYER_HAS_UPDATES }}
    steps:
      - uses: actions/checkout@v1
      - name: checkSourceCommit
        id: filepath
        run: |
          echo ::set-output name=commitpath::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})

      - name: checkForLayer
        id: updates
        run: |
          for i in ${{ steps.filepath.outputs.commitpath }}; do
            echo item: $i
            if [[ $i =~ ^backend/layers ]]; then
              echo ::set-output name=LAYER_HAS_UPDATES::'1'
              break
            fi
          done

      - name: echoResult
        run: |
          echo ${{ steps.updates.outputs.LAYER_HAS_UPDATES }}
  LayersJob:
    needs: CheckLayerUpdated
    # if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '56'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
        if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
      - name: Use Node.js ${{ matrix.node-version }}
        if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: test
        # run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
        run: |
          echo ${{ needs.CheckLayerUpdated.outputs.output1  }}
      # - name: Install layer packages
      #   if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
      #   run: |
      #     npm install
      #   working-directory: backend/layers
      # - name: Install helper_lib packages
      #   if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
      #   run: |
      #     npm install
      #   working-directory: backend/layers/helper_lib
      # - name: Compile helper_lib
      #   if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
      #   run: |
      #     npm run-script compile
      #   working-directory: backend/layers/helper_lib
      # - name: Serverless package
      #   if: ${{ needs.CheckLayerUpdated.outputs.LAYER_HAS_UPDATES }} == '1'
      #   run: |
      #     npx serverless package -v
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   working-directory: backend/layers
